# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "CentOS-7.2-x64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # Refer to: https://www.vagrantup.com/docs/networking/private_network.html
  config.vm.network "private_network", ip: "192.168.50.4"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = "1024"
  end

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo yum install -y epel-release
    sudo yum update -y

    sudo echo "======Install tools======"
    sudo yum install -y git
    sudo yum install -y wget
    sudo yum install -y vim

    # create downloads folder
    sudo mkdir -p /vagrant/downloads && cd /vagrant/downloads

    # install remi repo
    sudo echo "======Install remi repo======"
    if [ ! -e "remi-release-7.rpm" ]; then
      wget http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
    fi
    sudo rpm -Uvh remi-release-7*.rpm
    sudo cp /vagrant/remi.repo /etc/yum.repos.d/

    sudo echo "Show repo list:"
    sudo yum repolist

    # install php 5.6.30
    sudo echo "======Install php 5.6.30======"
    sudo yum install -y php php-pear \
      php-opcache \
      php-intl \
      php-gd \
      php-mysql \
      php-mcrypt \
      php-fpm \
      php-bcmath \
      php-mbstring \
      php-redis \
      php-soap \
      php-ssh2 \
      php-swoole \
      php-xml

    sudo systemctl enable php-fpm

    # install composer
    sudo yum intall -y composer

    # install mysql
    sudo echo "======Install mysql======"
    if [ ! -e "mysql57-community-release-el7-9.noarch.rpm" ]; then
      wget http://dev.mysql.com/get/mysql57-community-release-el7-9.noarch.rpm
    fi
    sudo yum localinstall -y mysql57-community-release-el7-9.noarch.rpm && sudo yum repolist enabled | grep "mysql.*-community.*"
    sudo yum install -y mysql-community-server
    sudo systemctl start mysqld

    # install nginx
    sudo echo "======Install nginx======"
    sudo yum install -y nginx && sudo systemctl enable nginx

    # config nginx
    sudo cp /vagrant/nginx.conf /etc/nginx/

    # config php
    sudo sed -i -e 's/;date.timezone =/date.timezone = Asia\/Shanghai/g' /etc/php.ini  # set timezone

    # install phpunit
    sudo yum install -y phpunit


    # ===============================================

    # copy php-info.php to default nginx website root
    sudo cp /vagrant/php-info.php /usr/share/nginx/html/

    # create work directory
    sudo mkdir -p /letv && sudo chown vagrant:vagrant /letv


    # ===============================================

    # search the initialized password of mysql root user and show it in console
    sudo echo "===The initialized password of mysql root user==="
    sudo grep "password" /var/log/mysqld.log

  SHELL
end
